#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


class Person{
    public:
    string name;
    int age;
    virtual void getdata(){
        cin >> name >> age;
    };
    virtual void putdata(){
        cout << name << " "<< age << endl;
    }
    
};

class Professor: public Person {
    public:
    int publications;
    int cur_id;
    Professor(){
    static int id=0;
    cur_id=++id;
    }
    void getdata();
    void putdata(); 
    
};




void Professor::getdata(){
    cin >> this->name >> this->age>> this->publications;
};

void Professor::putdata(){
    cout << name << " " << age << " "<< publications <<" "<< cur_id<< endl;
};

class Student: public Person{
    public:
    int marks[6];
    int cur_id;
    Student(){
    static int id_1;
    cur_id=++id_1;
    }
    void getdata();
    void putdata();
    
};

void Student::getdata(){
    cin >> this->name >> this->age;
    for(int i=0;i<6;i++){
       cin >> marks[i];
    }  
};

void Student::putdata(){
    int sum=0;
    for(int j=0;j<6; j++){
        sum+=marks[j];
    }
    int k=0;
            cout << this->name << " "
            << this->age << " "
            << sum << " "
            << this->cur_id << endl;
};

int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
